name: CI
on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  
  build:
    runs-on: ${{ matrix.operating-system }}    
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
    #----------------------------------------------
    #       check-out repo and set-up npm
    #----------------------------------------------
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

 
    #----------------------------------------------
    #    get next version
    #----------------------------------------------
      - name: Determine next version
        id: version
        if: github.event_name == 'push'
        run: |
          echo "::set-output name=VERSION::$(npx semantic-release --dry-run | grep -oP 'Published release \K.*? ')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #----------------------------------------------
    #     build project and upload
    #----------------------------------------------
      - name: Build Application
        run: npm run ci:build

    #----------------------------------------------
    #     create release 
    #----------------------------------------------
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/dev  '
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   